<project name="php-object-freezer" default="build" basedir=".">
    <target name="clean"><!-- Clean up -->
        <delete dir="build"/><!-- Create build directories -->
        <mkdir dir="${basedir}/build/api"/>         
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
    </target><!-- Run unit ./tests and generate junit.xml and clover.xml -->
   
    <target name="phpcomposer" description="Installing dependencies">
        <exec executable="wget" failonerror="true">
            <arg value="-nc" />
            <arg value="http://getcomposer.org/composer.phar" />
        </exec>
        <exec executable="php" failonerror="true">
            <arg value="composer.phar" />
            <arg value="install" />           
        </exec>
    </target>
    <target name="phpunit">
        <exec executable="phpunit" failonerror="true">
            <arg line=" --log-junit '${basedir}/build/logs/junit.xml'  --coverage-html '${basedir}/build/coverage/'  --coverage-clover '${basedir}/build/logs/clover.xml' ./tests"/>
        </exec>
    </target><!-- Run pdepend, phpmd, phpcpd, and phpcs in parallel -->
    <target name="parallelTasks">
        <parallel>
            <antcall target="pdepend"/>
            <antcall target="phpmd"/>
            <antcall target="phpcpd"/>
            <antcall target="phploc"/>
            <antcall target="phpcs"/>
        </parallel>
    </target><!-- Generate jdepend.xml and software metrics charts -->
    <target name="pdepend">
        <exec executable="pdepend">
            <arg line=" --jdepend-xml=${basedir}/build/logs/jdepend.xml --jdepend-chart=${basedir}/build/pdepend/dependencies.svg  --overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg ./tests"/>
        </exec>
    </target><!-- Generate pmd.xml -->
    <target name="phpmd">
        <exec executable="phpmd">
            <arg line="./tests xml codesize,design,naming,unusedcode --reportfile ${basedir}/build/logs/pmd.xml ./tests"/>
        </exec>
    </target><!-- Generate pmd-cpd.xml -->
    <target name="phpcpd">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml ./tests"/>
        </exec>
    </target><!-- Generate phploc.csv -->
    <target name="phploc">
        <exec executable="phploc">
            <arg line="--log-csv ${basedir}/build/logs/phploc.csv ./tests"/>
        </exec>
    </target><!-- Generate checkstyle.xml -->
    <target name="phpcs">
        <exec executable="phpcs" output="/dev/null">
            <arg line="--report=checkstyle               --report-file=${basedir}/build/logs/checkstyle.xml               --standard=Sebastian ./tests"/>
        </exec>
    </target><!-- Generate API documentation -->    
    <target name="build" depends="clean,phpcomposer,parallelTasks,phpunit"/>
</project>